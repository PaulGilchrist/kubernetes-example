apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.Chart.Name}}
spec:
  #replicas: 1 # remove this if using horizontal auto-scaling
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: {{.Chart.Name}} # has to match .spec.template.metadata.labels to select the pods that are part of this deployment
  minReadySeconds: 5 # how long after a new pod is ready before removing an old pod
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  template:
    metadata:
      labels:
        app: {{.Chart.Name}} # has to match .spec.selector.matchLabels so this pod template will be selected
      annotations:
        dapr.io/enabled: "true"
        dapr.io/app-id: {{.Chart.Name}}
        dapr.io/app-port: "80"
    spec:
      terminationGracePeriodSeconds: 30
      containers:
      - name: {{.Chart.Name}}
        env: 
        - name: BasePath
          value: /contacts
        - name: ContactsCollectionName
          value: contacts
        - name: DatabaseConnectionString
          valueFrom:
            secretKeyRef:
              name: {{.Chart.Name}}-secrets
              key: DatabaseConnectionString
              optional: false
        - name: DatabaseName
          value: mongotest
        - name: QueueConnectionString # same as HostName for QueueType="RabbitMQ"
          value: queue-service
        - name: QueueType # valid options are "AzureServiceBus", "Dapr", or "RabbitMQ"
          value: RabbitMQ
        - name: TelemetryConnectionString # blank if TelemetryType="Console"
          value: 
        - name: TelemetryType # valid options are "AppInsights", "Console", or "Zipkin"
          value: Console
        image: paulgilchrist/mongodb-api:{{.Values.image.tag}}
        imagePullPolicy: Always
        readinessProbe: # More heavyweight check than liveness with more details returned
          httpGet:
            path: /health/readiness
            port: 80
          failureThreshold: 3
          initialDelaySeconds: 15
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 15
        livenessProbe:
          httpGet:
            path: /health/liveness
            port: 80
          failureThreshold: 3
          initialDelaySeconds: 15
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 5
        ports:
        - containerPort: 80
          name: http
        resources:
          limits:
            cpu: 80m  # this demo size is too small for production
            memory: 1.5Gi
          requests:
            cpu: 5m # this demo size is too small for production
            memory: 0.5Gi
